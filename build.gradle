plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
}

// ... (all your other configuration remains the same) ...

// SonarQube Configuration
sonarqube {
    properties {
        property "sonar.projectKey", "server-irai-yoga-v1"
        property "sonar.projectName", "Server Irai Yoga v1"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.binaries", "build/classes/java/main"
        property "sonar.java.test.binaries", "build/classes/java/test"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", System.getenv("SONAR_HOST_URL")
        property "sonar.login", System.getenv("SONAR_TOKEN")
        property "sonar.exclusions", "**/test/**,**/build/**,**/gradle/**,**/*.gradle,**/.*"
        
        // Quality Gate configuration
        property "sonar.qualitygate.wait", "true"
        property "sonar.qualitygate.timeout", "600"
    }
}

// CORRECT TASK CONFIGURATION:
// The SonarQube plugin creates a task named 'sonarqube' (not 'sonar')

// Ensure proper task ordering for SonarQube
tasks.named('sonarqube') {
    dependsOn jacocoTestReport
    mustRunAfter test
}

// Create a dedicated CI task that ensures proper task ordering
tasks.register('ciBuild') {
    group = 'Build'
    description = 'Runs the complete CI pipeline with proper task ordering'
    
    dependsOn spotlessCheck
    dependsOn test
    dependsOn jacocoTestReport
    dependsOn jacocoTestCoverageVerification
    
    tasks.findByName('jacocoTestReport')?.mustRunAfter('test')
    tasks.findByName('jacocoTestCoverageVerification')?.mustRunAfter('jacocoTestReport')
}

tasks.register('ciSonar') {
    group = 'Build'
    description = 'Runs SonarQube analysis with proper task ordering'
    
    dependsOn jacocoTestReport
    dependsOn sonarqube  // Use the correct task name
    
    tasks.findByName('sonarqube')?.mustRunAfter('jacocoTestReport')
}
