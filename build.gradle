plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.sonarqube' version '5.1.0.4882'
}

group = 'com.cloudopsone'
version = '1.0.0'
description = 'Server Irai Yoga v1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.assertj:assertj-core'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        xml.destination = file("${buildDir}/reports/jacoco/report.xml")
        html.required = true
        html.outputLocation = layout.buildDirectory.dir("reports/jacoco/html")
    }
}

spotless {
    java {
        googleJavaFormat('1.17.0')
        target 'src/**/*.java'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// ✅ Fix Sonar deprecation warning
sonarqube {
    properties {
        property "sonar.gradle.skipCompile", "true"
        property "sonar.projectKey", "server-irai-yoga-v1"
        property "sonar.projectName", "Server Irai Yoga v1"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.binaries", "${buildDir}/classes/java/main"
        property "sonar.junit.reportPaths", "${buildDir}/test-results/test"
        property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/test.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/report.xml"
    }
}

// ✅ Ensure compilation & tests happen before analysis
tasks.named("sonarqube") {
    dependsOn("build", "test", "jacocoTestReport")
}
